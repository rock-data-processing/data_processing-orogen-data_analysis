name "data_analysis"

import_types_from "base"
import_types_from "data_analysisTypes.hpp"
using_task_library "type_to_vector"

task_context "WeightedSum", subclasses: "type_to_vector::BaseTask" do

    doc "Compute the weighted sum of n input streams"

    property("weights", "base/VectorXd").
        doc "Weighting factors of the weighted sum. The size of this vector has to be equal to the number of
             dynamic input ports from port_config property. See 'type_to_vector::BaseTask' for more info"

    # The weighted sum
    output_port("weighted_sum", "base/VectorXd")

    port_driven
end

task_context "Norm", subclasses: "type_to_vector::BaseTask" do

    doc "Compute the lp norm of the input data stream"

    property("p", "double", 2).
        doc "The exponent of the norm. Allowed values are (p = 1 -> sum norm, p = 2 -> euclidean norm, p = inf -> inf-norm/max.-norm)"

    dynamic_output_port(/^norm_\d+$/, "double")

    port_driven
end

task_context "Sigmoid", subclasses: "type_to_vector::BaseTask" do

    doc "Implements a Generalized Sigmoid function: y = A + (K - A) / (1 + Q*exp(-B*(t - M)))

         with:  A - Lower Asymptote
                K - Upper Asymptote
                B - Growth rate
                M - Horizontal shift
                Q - Initial Value

         The size of the port_config property has to be 1  See 'type_to_vector::BaseTask' for more info"

    property("sigmoid_params", "std/vector<data_analysis/SigmoidParams>").
        doc "Parameters for the Sigmoid function of each input dimension. The size of this vector has to be equal to the input dimension"

    output_port("sigmoid", "base/VectorXd").
        doc "The Sigmoid function for all input dimensions"

    operation("writeToFile").
        argument("filename", "std/string").
        argument("range_min", "double").
        argument("range_max", "double").
        argument("step_size", "double").
        doc "Output the Sigmoid function to a file"

    port_driven
end
